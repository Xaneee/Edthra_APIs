from fastapi import APIRouter, HTTPException
from core.brain_interface import update_brain_interface
from utils.web_searcher import search_web
import json, os
from datetime import datetime

code_writer_router = APIRouter()

PROJECT_STATE_PATH = "core/active_project.json"

def format_code_block(snippets):
    unique_lines = set()
    for code in snippets:
        for line in code.split("\n"):
            unique_lines.add(line.strip())
    return "\n".join(sorted(unique_lines))

@code_writer_router.post("/generate_code/logic")
def generate_code():
    if not os.path.exists(PROJECT_STATE_PATH):
        raise HTTPException(status_code=404, detail="No active project found.")

    with open(PROJECT_STATE_PATH, "r") as f:
        idea = json.load(f)

    title = idea["title"].replace(" ", "_")
    keywords = " ".join(idea["keywords"])

    search_results = search_web(keywords)
    if not search_results:
        raise HTTPException(status_code=500, detail="Failed to gather web logic.")

    all_code_snippets = [item["code"] for item in search_results if item.get("code")]
    if not all_code_snippets:
        raise HTTPException(status_code=404, detail="No usable code found.")

    final_code = format_code_block(all_code_snippets)

    project_folder = f"projects/{title}"
    os.makedirs(project_folder, exist_ok=True)

    code_path = os.path.join(project_folder, "main.py")
    with open(code_path, "w", encoding="utf-8") as f:
        f.write(f"# Generated by Edithra AGI on {datetime.utcnow().isoformat()}\n\n")
        f.write(final_code)

    update_brain_interface({
        "goal": f"Build project: {idea['title']}",
        "thought": f"Used web to gather logic for keywords: {keywords}",
        "project": idea['title'],
        "mutation": "Created base logic file from gathered snippets"
    })

    idea["status"] = "code_generated"
    with open(PROJECT_STATE_PATH, "w") as f:
        json.dump(idea, f, indent=2)

    return {
        "message": "Code generated and saved.",
        "project": idea["title"],
        "file_path": code_path,
        "lines": len(final_code.splitlines())
    }
